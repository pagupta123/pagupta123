<apex:page controller="zoom_app.ZoomVoiceLoginController" showHeader="false">
    <apex:includeScript value="{! $Resource.Vuejs }" />
    <head>
        <apex:slds />
    </head>
    <html xmlns:v-bind="http://vue.org" xmlns:v-on="http://vue.org">

    <style>
        .container {
            padding-right: 15px;
            padding-left: 15px;
            margin-right: auto;
            margin-left: auto;
        }
        #oauth {
            padding-top: 420px;
            width: 600px;
            text-align: center;
        }
        .oauth-message {
            font-size: 20px;
            font-weight: bolder;
        }
    </style>

    <body>
        <div class="slds-scope">
            <div class="container" id="oauth">
                <div class="oauth-message">
                    <h3>
                        You have successfully logged in to Zoom Phone
                    </h3>
                </div>
                <div style="height: 6rem;">
                    <div role="status" class="slds-spinner slds-spinner_medium">
                        <span class="slds-assistive-text">Loading</span>
                        <div class="slds-spinner__dot-a"></div>
                        <div class="slds-spinner__dot-b"></div>
                    </div>
                </div>

            </div>
        </div>

        <script type="text/javascript">
            
            var app = new Vue({
                el: '#oauth',
                methods: {
                    
                },
                mounted() {
                    setTimeout(() => {
                        setToken2Salesforce();
                    }, 3000);
                }
            });
            function setToken2Salesforce() {
                
                var access_code = getCodeFromUrl();
                //var oAuthAccessToken = requestParams['access_token'];


                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.ZoomVoiceLoginController.getUserEmailByOauthAccessToken}',
                access_code,
                    handleSaveZoomTokenResult);
            }
            function handleSaveZoomTokenResult(result, event) {
                if (event.type == 'exception') {
                    alert(event.message);
                } else {
                    if(!result.success) {
                        localStorage.setItem('errorCode', result.errorCode);
                        //store zoomUserEmail ignore the request isn't success, for error message can display login email info 
                        localStorage.setItem(result.body.sfdcEmail, result.body.zoomUserEmail);
                    } else {
                        console.log(result);
                        localStorage.removeItem('errorCode');
                        localStorage.setItem(result.body.sfdcEmail, result.body.zoomUserEmail);
                    }


                    window.opener.location.reload();
                    setTimeout(() => {
                        closeWindows();
                    }, 3000);
                }


            }

            

            function getParmas() {
                var requestHash = location.hash;
                var requestParameters = new Object();

                var parameters = decodeURI(requestHash.substr(1));
                parameterArray = parameters.split('&');
                for (var i = 0; i < parameterArray.length; i++) {
                    requestParameters[parameterArray[i].split('=')[0]] = (parameterArray[i].split('=')[1]);
                }
                return requestParameters;
            }
            function getCodeFromUrl(){
                var reg = new RegExp("(^|&)" + 'code' + "=([^&]*)(&|$)"); 
                var r = window.location.search.substr(1).match(reg);  
                if (r != null) return unescape(r[2]); return null; 
            }
            function closeWindows() {
                var browserName = navigator.appName;
                var browserVer = parseInt(navigator.appVersion);
                if (browserName == "Microsoft Internet Explorer") {
                    var ie7 = (document.all && !window.opera && window.XMLHttpRequest) ? true : false;
                    if (ie7) {
                        //This method is required to close a window without any prompt for IE7 & greater versions.
                        window.open('', '_parent', '');
                        window.close();
                    } else {
                        //This method is required to close a window without any prompt for IE6
                        this.focus();
                        self.opener = this;
                        self.close();
                    }
                } else { //For NON-IE Browsers except Firefox which doesnt support Auto Close
                    try {
                        this.focus();
                        self.opener = this;
                        self.close();
                    } catch (e) {

                    }
                    try {
                        window.open('', '_self', '');
                        window.close();
                    } catch (e) {

                    }
                }
            }
        </script>
    </body>

    </html>



</apex:page>